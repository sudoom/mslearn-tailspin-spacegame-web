trigger:
- '*'
variables:
  buildConfiguration: 'Release'

stages:
  - stage: 'Build'
    displayName: 'Build the web application'
    jobs: 
    - job: 'Build'
      displayName: 'Build job'
      # pool:
      #   vmImage: 'ubuntu-18.04'


      # variables:
      #   wwwrootDir: 'Tailspin.SpaceGame.Web/wwwroot'
      #   dotnetSdkVersion: '3.1.300'

      steps:
        - task: AzureResourceManagerTemplateDeployment@3
          displayName: 'Create container registry'
          inputs:
            deploymentScope: 'Resource Group'
            azureResourceManagerConnection: 'mossad-connection'
            subscriptionId: '31913d88-00fe-439b-9bab-a0fc309af11f'
            action: 'Create Or Update Resource Group'
            resourceGroupName: 'testkubepipe'
            location: 'East US'
            templateLocation: 'Linked artifact'
            csmFile: 'kube.json'
            deploymentMode: 'Incremental'

  #       - task: UseDotNet@2
  #         displayName: 'Use .Net Core SDK $(dotnetSdkVersion)'
  #         inputs:
  #           packageType: sdk
  #           version: '$(dotnetSdkVersion)'

  #       - task: DotNetCoreCLI@2
  #         displayName: 'Restore project dependencies'
  #         inputs:
  #           command: 'restore'
  #           projects: '**/*.csproj'

  #       - template: templates/build.yml
  #         parameters:
  #           buildConfiguration: 'Release'    

  #       - task: PublishBuildArtifacts@1
  #         displayName: 'Publish Artifact: drop'
  #         condition: succeeded()

  # - stage: 'Deploy'
  #   displayName: 'Deploy the web application'
  #   dependsOn: Build
  #   jobs:
  #     - deployment: Deploy
  #       pool:
  #         vmImage: 'ubuntu-18.04'
  #       environment: dev
  #       variables:
  #         - group: Release
  #       strategy:
  #         runOnce:
  #           deploy:
  #             steps:
  #               - download: current
  #                 artifact: drop
  #               - task: AzureWebApp@1
  #                 displayName: 'Azure app service Deeploy: website'
  #                 inputs:
  #                   azureSubscription: 'mossad-connection'
  #                   appName: '$(WebAppName)'
  #                   package: '$(Pipeline.Workspace)/drop/$(buildConfiguration)/*.zip'
