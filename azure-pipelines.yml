trigger:
- '*'
variables:
  buildConfiguration: 'Release'

stages:
  - stage: 'Build'
    displayName: 'Build thne web application'
    jobs: 
    - job: 'Build'
      displayName: 'Build job'
      pool:
        vmImage: 'ubuntu-18.04'
        demands:
        - npm

      variables:
        wwwrootDir: 'Tailspin.SpaceGame.Web/wwwroot'
        dotnetSdkVersion: '3.1.300'

      steps:
        - task: AzureResourceManagerTemplateDeployment@3
          displayName: 'Create .Net Core App'
          deploymentScope: 'Resource Group'
          azureResourceManagerConnection: 'mossad-connection'
          subscriptionId: '31913d88-00fe-439b-9bab-a0fc309af11f'
          action: 'Create Or Update Resource Group'
          resourceGroupName: 'testpipe'
          location: 'East US'
          templateLocation: 'Linked artifact'
          csmFile: 'dotnetapp.json'
          # csmParametersFile: '$(Build.ArtifactStagingDirectory)/anotherapp.parameters.json'
          # overrideParameters: '-siteName $(siteName) -administratorLogin $(adminUser) -administratorLoginPassword $(ARM_PASS)'
          deploymentMode: 'Incremental'
        # - task: UseDotNet@2
        #   displayName: 'Use .Net Core SDK $(dotnetSdkVersion)'
        #   inputs:
        #     packageType: sdk
        #     version: '$(dotnetSdkVersion)'
        
        # - task: Npm@1
        #   displayName: 'Run npm install'
        #   inputs:
        #     verbose: false
        
        # - script: './node_modules/.bin/node-sass $(wwwrootDir) --output $(wwwrootDir)'
        #   displayName: 'Compile Sass assets'

        # - task: gulp@1
        #   displayName: 'Run gulp tasks'
        
        # - script: 'echo "$(Build.DefinitionName), $(Build.BuildId), $(Build.BuildNumber)" > buildinfo.txt'
        #   displayName: 'Write build info'
        #   workingDirectory: $(wwwrootDir)

        # - task: DotNetCoreCLI@2
        #   displayName: 'Restore project dependencies'
        #   inputs:
        #     command: 'restore'
        #     projects: '**/*.csproj'

        # - template: templates/build.yml
        #   parameters:
        #     buildConfiguration: 'Release'    

        # - task: PublishBuildArtifacts@1
        #   displayName: 'Publish Artifact: drop'
        #   condition: succeeded()

  # - stage: 'Deploy'
  #   displayName: 'Deploy the web application'
  #   dependsOn: Build
  #   jobs:
  #     - deployment: Deploy
  #       pool:
  #         vmImage: 'ubuntu-18.04'
  #       environment: dev
  #       variables:
  #         - group: Release
  #       strategy:
  #         runOnce:
  #           deploy:
  #             steps:
  #               - download: current
  #                 artifact: drop
  #               - task: AzureWebApp@1
  #                 displayName: 'Azure app service Deeploy: website'
  #                 inputs:
  #                   azureSubscription: 'mossad-connection'
  #                   appName: '$(WebAppName)'
  #                   package: '$(Pipeline.Workspace)/drop/$(buildConfiguration)/*.zip'
